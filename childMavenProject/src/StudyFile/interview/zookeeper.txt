zookeeper:
分布式应用程序协调服务
作用：
1.服务监控，监控服务健康情况，请求状态
2.主节点选举，zookeeper可以协助主节点选举
3.分布式锁
4.命名服务，客户端应用能够根据指定名字获取资源或者服务的地址，提供者信息

zab协议：
分为两种模式，崩溃恢复模式和消息广播模式
当一个follow服务与leader服务超过半数通讯异常，则选举出一个新的leader服务，
如果超过半数follow服务与这个leader服务数据同步完成，则转换成消息广播模式，
则这个新的leader服务接受客户端的事务请求，生成事务，完成对应的事务处理

如何保证主从同步，利用zab协议

zookeeper的消息通知机制
每一个客户端都对一个znode建立一个watcher事件，当znode发生改变，zk通知客户端
客户端根据znode改变情况，产生对应的业务处理

zookeeper部署模式3种
单机，集群，单机多用例（伪集群）

集群为什么要有主节点
避免重复处理，可以同步消息到从节点

集群有三台服务器，一台宕机，zookeeper是否还可以正常使用
单数服务器只要没超过一般的服务宕机就可以使用，主要节点数量符合2N+1，就可以进行正常服务

二阶段提交和三阶段提交

2PC
将事务提交分为两步，投票和提交
协调者通知参与者进行事务处理，不提交，记录日志，同步阻塞反馈结果给协调者（事务管理器）
如果全部成功，则协调者通知所有参与者进行提交，如果失败，则通知回滚

3PC
解决2PC产生的数据不一致问题，由于通知提交有可能没通知到，可能产生数据不一致的问题

zookeeper宕机如何处理
重新选举，只要不超过半数宕机，就可以正常提供服务

说下四种类型的数据节点 Znode？
persistent持久节点 一直存在
ephemeral临时节点 客户端断掉之后，会进行删除
persistent-sequential 持久顺序节点名后边会追加一个由父节点维护的自增整型数字
ephemeral-sequential 临时顺序节点

zookeeper选举制度
abcdefedaaa  --
至少备份一个，如果其中一个挂了就选举一个head